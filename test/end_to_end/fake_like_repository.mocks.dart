// Mocks generated by Mockito 5.0.16 from annotations
// in todaygoodwords/test/end_to_end/fake_like_repository.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:todaygoodwords/likes/like.dart' as _i4;
import 'package:todaygoodwords/likes/like_repository.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [LikeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLikeRepository extends _i1.Mock implements _i2.LikeRepository {
  MockLikeRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<_i4.Like> read() =>
      (super.noSuchMethod(Invocation.method(#read, []),
          returnValue: Stream<_i4.Like>.empty()) as _i3.Stream<_i4.Like>);
  @override
  _i3.Future<void> like() => (super.noSuchMethod(Invocation.method(#like, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  String toString() => super.toString();
}
